<?php

namespace App\Http\Controllers\Api\{{folderName}};

use App\Models\{{modelName}};
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Http\Requests\{{folderName}}Api\{{modelName}}ApiRequest;
use App\Http\Resources\{{folderName}}\{{modelName}}Resource;
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Resources\Json\AnonymousResourceCollection;

class {{modelName}}ApiController extends Controller
{
    public function index(Request $request): AnonymousResourceCollection
    {
        ${{modelNamePluralLowerCase}} = {{modelName}}::when($request->has('archive'), function($query){
            $query->onlyTrashed();
         })
         ->get();

        return {{modelName}}Resource::collection(${{modelNamePluralLowerCase}});
    }

    public function store({{modelName}}ApiRequest $request): JsonResponse
    {
        {{storeMethodCode}}

        return response()->json(${{modelNameSingularLowerCase}}, 201);
    }

    public function show({{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        return response()->json(${{modelNameSingularLowerCase}});
    }

    public function update({{modelName}}ApiRequest $request, {{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        {{updateMethodCode}}

        return response()->json(${{modelNameSingularLowerCase}}, 200);
    }

    public function destroy({{modelName}} ${{modelNameSingularLowerCase}}): JsonResponse
    {
        ${{modelNameSingularLowerCase}}->delete();

        return response()->json(null, 204);
    }

    public function restore($id) : JsonResponse
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::onlyTrashed()->findOrFail($id);
        ${{modelNameSingularLowerCase}}->restore();

        return response()->json(${{modelNameSingularLowerCase}}, 200);
    }

    public function forceDelete($id): JsonResponse
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::onlyTrashed()->findOrFail($id);
        {{deleteMethodCode}}
        ${{modelNameSingularLowerCase}}->forceDelete();

        return response()->json(null, 204);
    }

    /*
    public function trashed(): JsonResponse
    {
        ${{modelNameSingularLowerCase}} = {{modelName}}::onlyTrashed()->get();

        return response()->json(${{modelNameSingularLowerCase}}, 200);
    }
    */
}
